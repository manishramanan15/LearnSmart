<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="LearnSmart.Views.DetailView"
             xmlns:behavior="clr-namespace:LearnSmart.Behaviors"
             xmlns:video="clr-namespace:LearnSmart.Controls.FormsVideoLibrary"
             BackgroundColor="{StaticResource DarkBackgroundColor}"
             Title="{Binding Tutorial.Title}">
    <ContentPage.Resources>
        <ResourceDictionary>

            <Style x:Key="MovieTitleStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource WhiteColor}" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="Margin" Value="12, 0" />
            </Style>

            <Style x:Key="ReleaseDateStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource WhiteColor}" />
                <Setter Property="VerticalOptions" Value="End" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="Margin" Value="12, 0" />
            </Style>

            <Color x:Key="VoteCountColor">#939CAE</Color>

            <Style x:Key="VoteCountStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource VoteCountColor}" />
                <Setter Property="FontSize" Value="10" />
            </Style>

            <Style x:Key="VoteAverageStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource WhiteColor}" />
                <Setter Property="FontSize" Value="36" />
                <Setter Property="Margin" Value="12, 0, 24, 0" />
            </Style>

            <Color x:Key="TitleColor">#5D6576</Color>

            <Style x:Key="StorylineTitleStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource TitleColor}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="Margin" Value="12, 0" />
            </Style>

            <Style x:Key="StorylineStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{StaticResource WhiteColor}" />
                <Setter Property="BackgroundColor" Value="{StaticResource DarkBackgroundColor}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Margin" Value="12, 0" />
                <Setter Property="LineBreakMode" Value="WordWrap" />
            </Style>

            <Style x:Key="PlayButtonStyle" TargetType="Button">
                <Setter Property="BackgroundColor" Value="{DynamicResource AccentColor}" />
                <Setter Property="TextColor" Value="{StaticResource BlackColor}" />
                <Setter Property="HorizontalOptions" Value="Start" />
                <Setter Property="WidthRequest" Value="200" />
                <Setter Property="Margin" Value="12" />
            </Style>

            <Style x:Key="HomepageButtonStyle" TargetType="Button" BasedOn="{StaticResource PlayButtonStyle}">
                <Setter Property="BackgroundColor" Value="{StaticResource BlackColor}" />
                <Setter Property="TextColor" Value="{StaticResource WhiteColor}" />
            </Style>

        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid
            BackgroundColor="{StaticResource BackgroundColor}">
            <ScrollView   
                IsVisible="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}"
                BackgroundColor="{StaticResource DarkBackgroundColor}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <video:VideoPlayer x:Name="videoPlayer"
                           Grid.Row="0"
                           AreTransportControlsEnabled="False"
                           Source="{StaticResource ElephantsDream}"
                         >

                    </video:VideoPlayer>
                    <ActivityIndicator Grid.Row="0"
                           Color="Gray"
                           IsVisible="False">
                        <ActivityIndicator.Triggers>
                            <DataTrigger TargetType="ActivityIndicator"
                             Binding="{Binding Source={x:Reference videoPlayer}, 
                                               Path=Status}"
                             Value="{x:Static video:VideoStatus.NotReady}">
                                <Setter Property="IsVisible" Value="True" />
                                <Setter Property="IsRunning" Value="True" />
                            </DataTrigger>
                        </ActivityIndicator.Triggers>
                    </ActivityIndicator>

                    <StackLayout Grid.Row="1"
                     Orientation="Horizontal"
                     Margin="10, 0"
                     BindingContext="{x:Reference videoPlayer}">

                        <Label Style="{StaticResource MovieTitleStyle}" Text="{Binding Path=Position,
                                  StringFormat='{0:hh\\:mm\\:ss}'}"
                   VerticalOptions="Center"/>

                        <Button Text="&#x25B6;&#xFE0F; Play"
                    HorizontalOptions="CenterAndExpand"
                    Clicked="OnPlayPauseButtonClicked">
                            <Button.Triggers>
                                <DataTrigger TargetType="Button"
                                 Binding="{Binding Status}"
                                 Value="{x:Static video:VideoStatus.Playing}">
                                    <Setter Property="Text" Value="&#x23F8; Pause" />
                                </DataTrigger>

                                <DataTrigger TargetType="Button"
                                 Binding="{Binding Status}"
                                 Value="{x:Static video:VideoStatus.NotReady}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>

                        <Button Text="&#x23F9; Stop"
                    HorizontalOptions="CenterAndExpand"
                    Clicked="OnStopButtonClicked">
                            <Button.Triggers>
                                <DataTrigger TargetType="Button"
                                 Binding="{Binding Status}"
                                 Value="{x:Static video:VideoStatus.NotReady}">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>

                        <Label Text="{Binding Path=TimeToEnd,
                                  StringFormat='{0:hh\\:mm\\:ss}'}"
                   VerticalOptions="Center" />
                    </StackLayout>

                    <video:PositionSlider Grid.Row="2"
                              Margin="10, 0, 10, 10"
                              BindingContext="{x:Reference videoPlayer}"
                              Duration="{Binding Duration}"           
                              Position="{Binding Position}">
                        <video:PositionSlider.Triggers>
                            <DataTrigger TargetType="video:PositionSlider"
                             Binding="{Binding Status}"
                             Value="{x:Static video:VideoStatus.NotReady}">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </video:PositionSlider.Triggers>
                    </video:PositionSlider>
                </Grid>
            </ScrollView>
        </Grid>
    </ContentPage.Content>
</ContentPage>